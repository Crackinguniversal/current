#include "get_next_line.h"

int	get_check(char	*str)
{
	int	i;

	i = 0;
	if (str == NULL)
		return (0);
	while (str[i])
	{
		if (str[i] == '\n')
			return (1);
		i++;
	}
	return (0);
}

int	ft_strlen(char *str)
{
	int	i;

	i = 0;
	if (!str)
		return (0);
	while (str[i])
		i++;
	return (i);
}

char	*get_calloc(int size)
{
	int		i;
	char	*ret;

	i = 0;
	ret = malloc(size);
	while (i <= size)
	{
		ret[i] = '\0';
		i++;
	}
	return (ret);
}

char	*get_join(char	*s1, char *s2)
{
	int		sl1;
	int		sl2;
	char	*ret;
	int		i;
	int		j;

	i = 0;
	j = 0;
	sl1 = ft_strlen(s1);
	sl2 = ft_strlen(s2);
	ret = get_calloc(sl1 + sl2 + 1);
	if (!ret)
		return (NULL);
	while (sl1 > i)
	{
		ret[i] = s1[i];
		i++;
	}
	while (sl2 > j)
	{
		ret[i + j] = s2[j];
		j++;
	}
	ret[i + j] = '\0';
	return (ret);
}


char	*ft_strchr(char	*str, char c)
{
	int		i;
	int		j;
	char	*ret;

	if (!str)
		return (NULL);
	i = 0;
	j = 0;
	while (str[i] && str[i] != c)
		i++;
	ret = get_calloc(i + 1);
	if (!ret)
		return (NULL);
	while (j <= i)
	{
		ret[j] = str[j];
		j++;
	}
	ret[j] = '\0';
	return (ret);
}

char	*get_keep(char	*ret, char **keep)
{
	char	*rett;
	int		i;
	int		j;

	i = 0;
	j = 0;
	rett = get_calloc(BUFFER_SIZE + 1);
	if (!rett)
		return (NULL);
	while (ret[i] != '\n' && ret[i])
		i++;
	i++;
	if (ret[i] == '\0')
	{
		return (NULL);
	}
	while (ret[i])
	{
		rett[j] = ret[i];
		i++;
		j++;
	}
	free(*keep);
	rett[j] = '\0';
	return (rett);
}

void	get_the_line(char **ret, char **keep, int fd)
{
	int		flag;
	int		bytes;
	char	*freed;

	flag = 0;
	bytes = 1;
	while (bytes > 0 && flag == 0)
	{
		freed = *ret;
		*ret = get_join(*ret, *keep);
		if (!*ret)
		{
			*ret = freed;
			break ;
		}
		free(freed);
		flag = get_check(*ret);
		if (flag == 1)
			break ;
		bytes = read(fd, *keep, BUFFER_SIZE);
	}
}

int	get_errors(char **ret, char **keep, int fd)
{
	if(fd < 0)
		return (0);
	if (*keep)
	{
		*ret = get_join(*keep, NULL);
		if (!ret)
			return (0);
	}
	else
	{
		*ret = get_calloc(BUFFER_SIZE + 1);
		if (!*ret)
			return (0);
		*keep = get_calloc(BUFFER_SIZE + 1);
		if (!*keep)
			return (0);
	}
	return (1);
}

char	*get_next_line(int fd)
{
	char		*ret;
	static char	*keep;
	char		*freed;

	if ((get_errors(&ret, &keep, fd) == 0))
		return (NULL);
	if (get_check(ret) == 1)
	{
		keep = get_keep(ret, &keep);
		freed = ret;
		ret = ft_strchr(ret, '\n');
		free(freed);
		return (ret);
	}
	else if (read(fd, keep, BUFFER_SIZE) <= 0)
	{
		free(keep);
		return (NULL);
	}
	get_the_line(&ret, &keep, fd);
	keep = get_keep(ret, &keep);
	freed = ret;
	ret = ft_strchr(ret, '\n');
	free(freed);
	return (ret);
}

int	main()
{
	char 	*str;
	int fd;
// printf("%s", get_join(NULL,NULL));

	fd = open("zayed.txt", O_RDWR, 0666);
	while ((str = get_next_line(fd)) != NULL)
	{
		printf("%s", str);
		free(str);
	}
	return (0);
}

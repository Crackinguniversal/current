#include "get_next_line.h"

int	get_check(char	*str)
{
	int i;

	i = 0;
	while (str[i])
	{
		if (str[i] == '\n')
			return (1);
		i++;
	}
	return (0);
}

char	*get_calloc(int size)
{
	int		i;
	char	*ret;

	i = 0;
	ret = malloc(size + 1);
	while (i < size + 1)
	{
		ret[i] = '\0';
		i++;
	}
	return (ret);
}

int	ft_strlen(char *str)
{
	int	i;

	i = 0;
	if (!str)
		return (0);
	while (str[i])
		i++;
	return (i);
}

char	*get_join_extra(char *s1, char *s2, int sl1, int sl2)
{
	int		i;
	int		j;
	char	*ret;

	i = 0;
	j = 0;
	ret = get_calloc(sl1 + sl2);
	if (!ret)
		return (NULL);
	while (sl1 > i)
	{
		ret[i] = s1[i];
		i++;
	}
	while (sl2 > j)
	{
		ret[i + j] = s2[j];
		j++;
	}
	return (ret);
}

char	*get_join(char	*s1, char *s2)
{
	int		sl1;
	int		sl2;
	char	*ret;

	sl1 = 0;
	sl2 = 0;
	sl1 = ft_strlen(s1);
	sl2 = ft_strlen(s2);
	ret = get_join_extra(s1, s2, sl1, sl2);
	return (ret);
}

int	get_check_ready(char **ret, char	**keep,int fd)
{
	if (!*keep)
	{
		*keep = get_calloc(BUFFER_SIZE);
		if (!*keep)
			return (0);
		*ret = get_calloc(BUFFER_SIZE);
		if (!*ret)
		{
			free(*keep);
			return (0);
		}
		return (1);
	}
	*ret = get_join(*keep, NULL);
	if (!*ret)
		return (0);
	free(*keep);
	if ((read(fd,0,0)) <= 0)
		return 0;
	*keep = get_calloc(BUFFER_SIZE);
	if (!*keep)
	{
		free(*ret);
		return (0);
	}
	return (1);
}

void	get_the_line(char	**ret, char **keep, int fd)
{
	int		bytes;
	char	*remove;
	int		flag;
	char	*rett;

	bytes = read(fd, *keep, BUFFER_SIZE);
	if (bytes <= 0)
		return ;
	remove = *ret;
	*ret = get_join(*ret, *keep);
	if (!*ret)
		return ;
	free(remove);
	flag = get_check(*ret);
	while (flag == 0 && bytes > 0)
	{
		bytes = read(fd, *keep, BUFFER_SIZE);
		remove = *ret;
		*ret = get_join(*ret, *keep);
		if (!*ret)
			return ;
		free(remove);
		flag = get_check(*ret);
	}
	return ;
}

char	*get_next_line(int fd)
{
	char		*ret;
	static char	*keep;

	if (0 == (get_check_ready(&ret, &keep, fd)))
	{
		ret = NULL;
		keep = NULL;
		return (NULL);
	}
	get_the_line(&ret, &keep, fd);
	// get_last(&ret, &keep);
	return (ret);
}

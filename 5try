/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   get_next_line.c                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: zsid-ele <zsid-ele@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/12/28 15:50:12 by zsid-ele          #+#    #+#             */
/*   Updated: 2024/12/29 08:18:13 by zsid-ele         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "get_next_line.h"

int	ft_nlcheck(char *ret)
{
	int	i;

	i = 0;
	while (ret[i])
	{
		if (ret[i] == '\n')
			return (0);
		i++;
	}
	// if (i <= BUF - 1)
	// 	return (0);
	return (1);

}

static char	*ft_keep_static(char *ret, char *keep)
{
	int	i;
	int	j;

	i = 0;
	j = 0;
	while (ret[i] != '\n')
	{
		i++;
	}
	i++;
	while (ret[i])
	{
		keep[j] = ret[i];
		j++;
		i++;
	}
	keep[j] = '\0';
	return (keep);
}

int	ft_len(char *ret)
{
	int	i;

	i = 0;
	while (ret[i])
	{
		i++;
	}
	return (i);
}

char	*ft_join_get(char *ret, char *rd)
{
	int		i;
	int		j;
	int		rdlen;
	int		retlen;
	char	*rett;

	write (1,"1",2);
	rdlen = ft_len(rd);
	retlen = ft_len(ret);
	rett = malloc(rdlen + retlen + 1);
	rett[rdlen + retlen] = '\0';
	while (rdlen > i)
	{
		rett[i] = ret[i];
		i++;
	}
	while (retlen > j)
	{
		rett[i + j] = rd[j];
		j++;
	}
	rett[i + j] = '\0';
	free(ret);
	return (rett);
}

char	*ft_real_line(int fd, char	*rd, char *ret, char *keep)
{
	int	flag;

	flag = 1;
	while (flag != 0)
	{
		if ((read (fd, rd, BUF)) <= 0)
			return (ret);
		ret = ft_join_get(ret, rd);
		flag = ft_nlcheck(ret);
	}
	keep = ft_keep_static(ret, keep);
	free(rd);
	return (ret);
}

char	*get_next_line(int fd)
{
	char		*rd;
	char		*ret;
	static char	*keep;
	int			flag;

	if (!keep)
		keep = malloc(BUF + 1);
	flag = 1;
	ret = malloc(BUF + 1);
	if (read(fd, ret, BUF) <= 0 || !ret || !keep)
		return (NULL);
	ret[BUF] = '\0';
	flag = ft_nlcheck(ret);
	// if (flag == 0)
	// {keep_stati
	// 	keep = ft_c(ret, keep);
	// 	ret = t_easy_line(ret, keep);
	// 	return f(NULL);
	// }
	// if (flag == 1)
	ft_real_line(fd, rd, ret, keep);
	if (keep)
		return (ret);
}

#include "get_next_line.h"

int	main()
{
	int fd;
	fd = open("zayed.txt",O_RDWR,0666);
	printf("%s",get_next_line(fd));
	return (0);
}

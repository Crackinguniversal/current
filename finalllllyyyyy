#include "get_next_line.h"

int	get_check(char	*str)
{
	int	i;

	i = 0;
	if (str == NULL)
		return (0);
	while (str[i])
	{
		if (str[i] == '\n')
			return (1);
		i++;
	}
	return (0);
}

int	ft_strlen(char *str)
{
	int	i;

	i = 0;
	if (!str)
		return (0);
	while (str[i])
		i++;
	return (i);
}

char	*get_calloc(int size)
{
	int		i;
	char	*ret;

	i = 0;
	ret = malloc(size);
	if (!ret)
		return (NULL);
	while (i <= size)
	{
		ret[i] = '\0';
		i++;
	}
	return (ret);
}

int	get_ready(char	**keep, char	**ret)
{
	if (BUFFER_SIZE == 0)
		return (0);
	if (*keep)
	{
		*ret = get_calloc(BUFFER_SIZE);
		if (!*ret)
			return (free(*keep), 0);
	}
	else
	{
		*keep = get_calloc(BUFFER_SIZE);
		if (!*keep)
			return (0);
		*ret = get_calloc(BUFFER_SIZE);
		if (!*ret)
			return (free(*keep), 0);
	}
	return (1);
}

void	ft_strchr(char	*str, char c, char **keep)
{
	int		i;
	int		j;
	char	*freed;
	char	*ret;

	freed = *keep;
	if (!str)
		return ;
	i = 0;
	j = 0;
	while (str[i] && str[i] != c)
		i++;
	ret = get_calloc(i + 1);
	if (!ret)
		return ;
	while (j <= i)
	{
		ret[j] = str[j];
		j++;
	}
	ret[j] = '\0';
	free(freed);
	*keep = ret;
}

char	*get_keep(char *keep)
{
	while (*keep && *keep != '\n')
		keep++;
	keep++;
	return (keep);
}

char	*get_join(char	*s1, char *s2)	
{
	int		sl1;
	int		sl2;
	char	*ret;
	int		i;
	int		j;

	i = 0;
	j = 0;
	sl1 = ft_strlen(s1);
	sl2 = ft_strlen(s2);
	ret = get_calloc(sl1 + sl2 + 1);
	if (!ret)
		return (NULL);
	while (sl1 > i)
	{
		ret[i] = s1[i];
		i++;
	}
	while (sl2 > j)
	{
		ret[i + j] = s2[j];
		j++;
	}
	ret[i + j] = '\0';
	return (ret);
}

char	*get_next_line(int fd)
{
	static char		*keep;
	char			*ret;
	int				bytes;

	if (fd < 0 || read(fd, 0, 0) < 0 || get_ready(&keep, &ret) == 0)
		return (NULL);
	if (get_check(keep) == 1)
	{
		ft_strchr(keep, '\n', &ret);
		keep = get_keep(keep);
		return (ret);
	}
	bytes = read(fd, ret, BUFFER_SIZE);
	if (bytes == 0)
		return (NULL);
	while ((bytes > 0) && get_check(keep) == 0)
	{
		keep = get_join(keep, ret);
		if (get_check(keep) == 0)
			bytes = read(fd, ret, BUFFER_SIZE);
	}
	ft_strchr(keep, '\n', &ret);
	keep = get_keep(keep);
	if (get_check(ret) == 0)
		get_next_line(fd);
	return (ret);
}

int	main()
{
	char 	*str;
	int fd;
	fd = open("zayed.txt", O_RDWR, 0666);
	while ((str = get_next_line(fd)) != NULL)
	{
		printf("1-%s\n", str);
		free(str);
	}
	close(fd);
	return (0);
}

#include "get_next_line.h"

int	get_check(char	*str)
{
	int i;


	i = 0;
	while (str[i])
	{
		if (str[i] == '\n')
			return (1);
		i++;
	}
	return (0);
}

int	ft_strlen(char *str)
{
	int	i;

	i = 0;
	if (!str)
		return (0);
	while (str[i])
		i++;
	return (i);
}

char	*get_calloc(int size)
{
	int		i;
	char	*ret;

	i = 0;
	ret = malloc(size);
	while (i < size)
	{
		ret[i] = '\0';
		i++;
	}
	return (ret);
}

char	*get_join_extra(char *s1, char *s2, int sl1, int sl2)
{
	int		i;
	int		j;
	char	*ret;

	i = 0;
	j = 0;
	ret = get_calloc(sl1 + sl2);
	if (!ret)
		return (NULL);
	while (sl1 > i)
	{
		ret[i] = s1[i];
		i++;
	}
	while (sl2 > j)
	{
		ret[i + j] = s2[j];
		j++;
	}
	ret[i + j] = '\0';
	return (ret);
}

char	*get_join(char	*s1, char *s2)
{
	int		sl1;
	int		sl2;
	char	*ret;

	sl1 = 0;
	sl2 = 0;
	sl1 = ft_strlen(s1);
	sl2 = ft_strlen(s2);
	ret = get_join_extra(s1, s2, sl1, sl2);
	return (ret);
}

int	get_ready_first(char **ret, char **keep, int fd)
{
	int	flag;

	flag = 1;
	*ret = get_calloc(BUFFER_SIZE + 1);
	if (!*ret)
		return (0);
	*keep = get_calloc(BUFFER_SIZE + 1);
	if (!*keep)
	{
		free(*ret);
		return (0);
	}
	if (read(fd, *ret, BUFFER_SIZE) <= 0)
	{
		free(*ret);
		free(*keep);
		return (0);
	}
	return (1);
}

int	get_ready(char	**str, char	**keep)
{
	if (*keep)
	{
		*str = get_join(*keep, NULL);
		if (!*str)
		{
			free(*keep);
			return (0);
		}
		// *keep = NULL;
		return (1);
	}
	else
	{
		*keep = get_calloc(BUFFER_SIZE + 1);
		if (!*keep)
			return (0);
		*str = get_calloc(BUFFER_SIZE + 1);
		if (!*str)
		{
			free(*keep);
			return (0);
		}
		return (1);
	}
}

void get_the_line(char	**str, char **keep, int fd)
{
	int		flag;
	int		bytes;
	char	*freed;

	*str = get_join(*str, *keep);
	if (!*str)
		return ;
	flag = get_check(*str);
	flag = 0;
	while (flag == 0 && bytes > 0)
	{
		bytes = read(fd, *keep, BUFFER_SIZE);
		if (bytes > 0)
		{
			freed = *str;
			*str = get_join(*str, *keep);
			if (!str)
			{
				free(str);
				return ;
			}
			free(freed);
		}
		flag = get_check(*str);
	}
}

char	*ft_strchr(char	*str, char c)
{
	int		i;
	int		j;
	char	*ret;

	i = 0;
	j = 0;
	while (str[i] && str[i] != '\n')
		i++;
	ret = get_calloc(i + 1);
	if (!ret)
		return (NULL);
	while (j <= i)
	{
		ret[j] = str[j];
		j++;
	}
	return (ret);
}

char	*get_keep(char	*keep)
{
	int		i;
	int		j;
	int		z;
	char	*ret;

	i = 0;
	j = 0;
	z = 0;
	while (keep[i] != '\n' && keep[i])
		i++;
	i++;
	// while (keep[i + j] != '\n' && keep[i + j])
	// 	j++;
	// if (j == 0)
	// 	return (NULL);
	ret = get_calloc(BUFFER_SIZE + 1);
	if (!ret)
		return (NULL);
	while (keep[i + z])
	{
		ret[z] = keep[i + z];
		z++;
	}
	return (ret);
}

char	*get_next_line(int fd)
{
	char		*str;
	static char	*keep;
	char		*freed;
	int			ready;
	int			bytes;

	ready = get_ready(&str, &keep);
	bytes = read(fd, keep, BUFFER_SIZE);
	if (bytes <= 0 || ready == 0 || fd < 0)
	{
		free(keep);
		return (0);
	}
	get_the_line(&str, &keep, fd);
	freed = str;
		str = ft_strchr(str, '\n');
	keep = get_keep(keep);
	free(freed);
	return (keep);
}
